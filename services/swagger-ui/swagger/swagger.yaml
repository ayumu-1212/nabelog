openapi: 3.0.0
x-stoplight:
  id: den590xs11lcf
info:
  title: swagger
  version: '2.0'
servers:
  - url: 'http://localhost:8080'
paths:
  /shops:
    parameters: []
    get:
      summary: Get Shops
      tags: []
      responses:
        '200':
          description: Shops Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
              examples: {}
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
          headers: {}
        '400':
          description: Bad Request
      operationId: get-shops
      description: get shops
  '/shops/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Get Shop
      tags: []
      responses:
        '200':
          description: Shops Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
              examples: {}
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
          headers: {}
        '400':
          description: Bad Request
      operationId: get-shop
      description: get shop
  /shops/new:
    post:
      summary: Create New User
      operationId: post-shop
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
              examples: {}
        '400':
          description: Missing Required Information
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            examples: {}
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: string
            examples:
              example-1:
                value: {}
          text/html:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        description: Post the necessary fields for the API to create a new shop.
      description: Create a new shop.
    parameters: []
components:
  schemas:
    Shop:
      title: Shop
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
      required:
        - id
